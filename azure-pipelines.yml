# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- development

pool:
  vmImage: ubuntu-latest

variables:
  serviceConnection: CHEWSY_WEB_UI
  appServiceName: chewsy

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '16.15.1'
  displayName: 'Install Node'
- script: npm install
  displayName: 'Install dependencies'
- script: npm run build
  displayName: 'Build App'

- script: npm run test:lint:js
  displayName: 'Run JS lint'
- script: npm run test:ci
  displayName: 'Run unit tests'
- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: 'junit.xml'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: 'coverage/cobertura-coverage.xml'
  displayName: 'Publish Code Coverage'
  
- task: CopyFiles@2
  displayName: 'Copy files'
  inputs:
    sourceFolder: 'build' 
    Contents: '**/*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    cleanTargetFolder: true
- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    includeRootFolder: false
    archiveType: zip
    archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    replaceExistingArchive: true
- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'
  inputs: 
    pathtoPublish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip

- task: AzureWebApp@1
  displayName: 'Deploy to App Service'
  inputs:
    azureSubscription: '$(serviceConnection)'
    appName: '$(appServiceName)'
    appType: webAppLinux
    package: '$(System.ArtifactsDirectory)/$(Build.BuildId).zip'